def func4(arg31, arg32):
    var33 = func7()
    var34 = func10()
    if arg32 < var34:
        var39 = class11()
    else:
        var39 = class13()
    for var40 in xrange(21):
        var41 = var39.func12
        var41(arg31, arg32)
    if arg31 < arg31:
        var42 = 1035852752 - arg32
    else:
        var42 = 640 + arg31 | var34 + -819416646
    var43 = (366 + var33) + -291 + 202
    var44 = var34 & arg32
    if arg31 < var43:
        var45 = (arg32 & 411 ^ var44) | -386
    else:
        var45 = -62 + (932 - var33 ^ var34)
    if var34 < arg31:
        var46 = (arg31 ^ arg32) ^ -483382619 | var33
    else:
        var46 = arg31 - (-801395852 ^ 208122410) - -315
    var47 = -776 + var44 & arg31 & var34
    var48 = arg31 ^ var47
    var49 = var34 + arg31 - var43 + var48
    var50 = (var47 - var48) ^ -794 | var43
    var51 = (arg31 | var47 & 135) - var50
    var52 = var33 & var47
    var53 = ((var47 ^ var43) | var49) ^ -2063711281
    var54 = var52 - var51 | arg31 ^ var51
    var55 = (var54 | var43) | var43
    if var34 < arg32:
        var56 = var48 ^ ((var50 & arg31) - var43)
    else:
        var56 = var53 - ((-446 + var33) & var33)
    var57 = arg31 - (var55 - var43)
    var58 = (var55 | 141239244) | var33 | var55
    var59 = var58 | var44 | var47 & var44
    var60 = var53 & var58
    var61 = ((var44 ^ -105945104) + var53) - var58
    var62 = var58 ^ (539 ^ var57) | var54
    var63 = var51 ^ var34 & var43
    var64 = var34 + (var50 & (var51 - var43))
    var65 = var63 | var61
    var66 = var57 & var48 | arg31 + var63
    result = var49 & var60 | var51
    return result
class class13(object):
    def func12(self, arg37, arg38):
        result = ((-1771965045 & -1 ^ 1 - -1854738919 ^ arg37) - -1743833632) | arg37
        return result
class class11(class13):
    def func12(self, arg35, arg36):
        result = arg35 - arg35
        return result
def func10():
    func8()
    result = len(xrange(21))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -4
def func7():
    func5()
    result = len(range(29))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : -1
def func3(arg8, arg9):
    var10 = arg9 ^ ((arg8 & -957971908) ^ -831)
    var11 = (arg9 | var10) & -290678312 | 36505037
    if arg8 < arg8:
        var12 = 1227116599 | ((var10 | arg8) + 941624747)
    else:
        var12 = var10 + (arg8 + arg8 + -575)
    var13 = -489 - ((-947 - var11) + -1740178674)
    var14 = var13 | (var10 & 955407116) ^ -958
    var15 = (arg8 - -967 & var13) ^ 488
    var16 = ((var15 & -138) - var15) ^ arg9
    var17 = var16 - (var10 & var13) + arg9
    var18 = var17 | var16
    var19 = var16 ^ var15
    var20 = var17 ^ var19 ^ arg8 & var18
    var21 = (var16 ^ 745) - var17 & var10
    var22 = var20 - ((-68 | var15) ^ var14)
    var23 = var22 & (120 - var10) - var11
    var24 = arg8 ^ (var11 | arg9) - var20
    var25 = var16 & ((var18 + var21) & var23)
    var26 = ((var14 & var21) - 929) & -969
    var27 = (-244 | arg9) - var11
    var28 = arg8 - (var24 ^ var13 ^ var22)
    var29 = var22 + var21
    var30 = var18 | var18
    result = var27 | (var10 | var28)
    return result
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    result = ((-414 & (arg2 | (-272 & -997) - var7)) - (((var7 | arg1) - 482286050 & -463 - var7) ^ arg1)) | -1664503799
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in (-3 - 0 for i in xrange(33)):
        if arg3 < arg4:
            var5 += arg3 + 2
        else:
            var5 += arg4 - var6
    return var5
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 3'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 2'
    print 'func_number: 4'
    print 'arg_number: 31'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 15'
    print 'arg_number: 67'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,def func4(arg31, arg32):
    var33 = func7()
    var34 = func10()
    if arg32 < var34:
        var39 = class11()
    else:
        var39 = class13()
    for var40 in xrange(21):
        var41 = var39.func12
        var41(arg31, arg32)
    if arg31 < arg31:
        var42 = 1035852752 - arg32
    else:
        var42 = 640 + arg31 | var34 + -819416646
    var43 = (366 + var33) + -291 + 202
    var44 = var34 & arg32
    if arg31 < var43:
        var45 = (arg32 & 411 ^ var44) | -386
    else:
        var45 = -62 + (932 - var33 ^ var34)
    if var34 < arg31:
        var46 = (arg31 ^ arg32) ^ -483382619 | var33
    else:
        var46 = arg31 - (-801395852 ^ 208122410) - -315
    var47 = -776 + var44 & arg31 & var34
    var48 = arg31 ^ var47
    var49 = var34 + arg31 - var43 + var48
    var50 = (var47 - var48) ^ -794 | var43
    var51 = (arg31 | var47 & 135) - var50
    var52 = var33 & var47
    var53 = ((var47 ^ var43) | var49) ^ -2063711281
    var54 = var52 - var51 | arg31 ^ var51
    var55 = (var54 | var43) | var43
    if var34 < arg32:
        var56 = var48 ^ ((var50 & arg31) - var43)
    else:
        var56 = var53 - ((-446 + var33) & var33)
    var57 = arg31 - (var55 - var43)
    var58 = (var55 | 141239244) | var33 | var55
    var59 = var58 | var44 | var47 & var44
    var60 = var53 & var58
    var61 = ((var44 ^ -105945104) + var53) - var58
    var62 = var58 ^ (539 ^ var57) | var54
    var63 = var51 ^ var34 & var43
    var64 = var34 + (var50 & (var51 - var43))
    var65 = var63 | var61
    var66 = var57 & var48 | arg31 + var63
    result = var49 & var60 | var51
    return result
class class13(object):
    def func12(self, arg37, arg38):
        result = ((-1771965045 & -1 ^ 1 - -1854738919 ^ arg37) - -1743833632) | arg37
        return result
class class11(class13):
    def func12(self, arg35, arg36):
        result = arg35 - arg35
        return result
def func10():
    func8()
    result = len(xrange(21))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -4
def func7():
    func5()
    result = len(range(29))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : -1
def func3(arg8, arg9):
    var10 = arg9 ^ ((arg8 & -957971908) ^ -831)
    var11 = (arg9 | var10) & -290678312 | 36505037
    if arg8 < arg8:
        var12 = 1227116599 | ((var10 | arg8) + 941624747)
    else:
        var12 = var10 + (arg8 + arg8 + -575)
    var13 = -489 - ((-947 - var11) + -1740178674)
    var14 = var13 | (var10 & 955407116) ^ -958
    var15 = (arg8 - -967 & var13) ^ 488
    var16 = ((var15 & -138) - var15) ^ arg9
    var17 = var16 - (var10 & var13) + arg9
    var18 = var17 | var16
    var19 = var16 ^ var15
    var20 = var17 ^ var19 ^ arg8 & var18
    var21 = (var16 ^ 745) - var17 & var10
    var22 = var20 - ((-68 | var15) ^ var14)
    var23 = var22 & (120 - var10) - var11
    var24 = arg8 ^ (var11 | arg9) - var20
    var25 = var16 & ((var18 + var21) & var23)
    var26 = ((var14 & var21) - 929) & -969
    var27 = (-244 | arg9) - var11
    var28 = arg8 - (var24 ^ var13 ^ var22)
    var29 = var22 + var21
    var30 = var18 | var18
    result = var27 | (var10 | var28)
    return result
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    result = ((-414 & (arg2 | (-272 & -997) - var7)) - (((var7 | arg1) - 482286050 & -463 - var7) ^ arg1)) | -1664503799
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in (-3 - 0 for i in xrange(33)):
        if arg3 < arg4:
            var5 += arg3 + 2
        else:
            var5 += arg4 - var6
    return var5
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 3'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 2'
    print 'func_number: 4'
    print 'arg_number: 31'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 15'
    print 'arg_number: 67'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,def func4(arg31, arg32):
    var33 = func7()
    var34 = func10()
    if arg32 < var34:
        var39 = class11()
    else:
        var39 = class13()
    for var40 in xrange(21):
        var41 = var39.func12
        var41(arg31, arg32)
    if arg31 < arg31:
        var42 = 1035852752 - arg32
    else:
        var42 = 640 + arg31 | var34 + -819416646
    var43 = (366 + var33) + -291 + 202
    var44 = var34 & arg32
    if arg31 < var43:
        var45 = (arg32 & 411 ^ var44) | -386
    else:
        var45 = -62 + (932 - var33 ^ var34)
    if var34 < arg31:
        var46 = (arg31 ^ arg32) ^ -483382619 | var33
    else:
        var46 = arg31 - (-801395852 ^ 208122410) - -315
    var47 = -776 + var44 & arg31 & var34
    var48 = arg31 ^ var47
    var49 = var34 + arg31 - var43 + var48
    var50 = (var47 - var48) ^ -794 | var43
    var51 = (arg31 | var47 & 135) - var50
    var52 = var33 & var47
    var53 = ((var47 ^ var43) | var49) ^ -2063711281
    var54 = var52 - var51 | arg31 ^ var51
    var55 = (var54 | var43) | var43
    if var34 < arg32:
        var56 = var48 ^ ((var50 & arg31) - var43)
    else:
        var56 = var53 - ((-446 + var33) & var33)
    var57 = arg31 - (var55 - var43)
    var58 = (var55 | 141239244) | var33 | var55
    var59 = var58 | var44 | var47 & var44
    var60 = var53 & var58
    var61 = ((var44 ^ -105945104) + var53) - var58
    var62 = var58 ^ (539 ^ var57) | var54
    var63 = var51 ^ var34 & var43
    var64 = var34 + (var50 & (var51 - var43))
    var65 = var63 | var61
    var66 = var57 & var48 | arg31 + var63
    result = var49 & var60 | var51
    return result
class class13(object):
    def func12(self, arg37, arg38):
        result = ((-1771965045 & -1 ^ 1 - -1854738919 ^ arg37) - -1743833632) | arg37
        return result
class class11(class13):
    def func12(self, arg35, arg36):
        result = arg35 - arg35
        return result
def func10():
    func8()
    result = len(xrange(21))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -4
def func7():
    func5()
    result = len(range(29))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : -1
def func3(arg8, arg9):
    var10 = arg9 ^ ((arg8 & -957971908) ^ -831)
    var11 = (arg9 | var10) & -290678312 | 36505037
    if arg8 < arg8:
        var12 = 1227116599 | ((var10 | arg8) + 941624747)
    else:
        var12 = var10 + (arg8 + arg8 + -575)
    var13 = -489 - ((-947 - var11) + -1740178674)
    var14 = var13 | (var10 & 955407116) ^ -958
    var15 = (arg8 - -967 & var13) ^ 488
    var16 = ((var15 & -138) - var15) ^ arg9
    var17 = var16 - (var10 & var13) + arg9
    var18 = var17 | var16
    var19 = var16 ^ var15
    var20 = var17 ^ var19 ^ arg8 & var18
    var21 = (var16 ^ 745) - var17 & var10
    var22 = var20 - ((-68 | var15) ^ var14)
    var23 = var22 & (120 - var10) - var11
    var24 = arg8 ^ (var11 | arg9) - var20
    var25 = var16 & ((var18 + var21) & var23)
    var26 = ((var14 & var21) - 929) & -969
    var27 = (-244 | arg9) - var11
    var28 = arg8 - (var24 ^ var13 ^ var22)
    var29 = var22 + var21
    var30 = var18 | var18
    result = var27 | (var10 | var28)
    return result
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    result = ((-414 & (arg2 | (-272 & -997) - var7)) - (((var7 | arg1) - 482286050 & -463 - var7) ^ arg1)) | -1664503799
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in (-3 - 0 for i in xrange(33)):
        if arg3 < arg4:
            var5 += arg3 + 2
        else:
            var5 += arg4 - var6
    return var5
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 3'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 2'
    print 'func_number: 4'
    print 'arg_number: 31'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 15'
    print 'arg_number: 67'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,def func4(arg31, arg32):
    var33 = func7()
    var34 = func10()
    if arg32 < var34:
        var39 = class11()
    else:
        var39 = class13()
    for var40 in xrange(21):
        var41 = var39.func12
        var41(arg31, arg32)
    if arg31 < arg31:
        var42 = 1035852752 - arg32
    else:
        var42 = 640 + arg31 | var34 + -819416646
    var43 = (366 + var33) + -291 + 202
    var44 = var34 & arg32
    if arg31 < var43:
        var45 = (arg32 & 411 ^ var44) | -386
    else:
        var45 = -62 + (932 - var33 ^ var34)
    if var34 < arg31:
        var46 = (arg31 ^ arg32) ^ -483382619 | var33
    else:
        var46 = arg31 - (-801395852 ^ 208122410) - -315
    var47 = -776 + var44 & arg31 & var34
    var48 = arg31 ^ var47
    var49 = var34 + arg31 - var43 + var48
    var50 = (var47 - var48) ^ -794 | var43
    var51 = (arg31 | var47 & 135) - var50
    var52 = var33 & var47
    var53 = ((var47 ^ var43) | var49) ^ -2063711281
    var54 = var52 - var51 | arg31 ^ var51
    var55 = (var54 | var43) | var43
    if var34 < arg32:
        var56 = var48 ^ ((var50 & arg31) - var43)
    else:
        var56 = var53 - ((-446 + var33) & var33)
    var57 = arg31 - (var55 - var43)
    var58 = (var55 | 141239244) | var33 | var55
    var59 = var58 | var44 | var47 & var44
    var60 = var53 & var58
    var61 = ((var44 ^ -105945104) + var53) - var58
    var62 = var58 ^ (539 ^ var57) | var54
    var63 = var51 ^ var34 & var43
    var64 = var34 + (var50 & (var51 - var43))
    var65 = var63 | var61
    var66 = var57 & var48 | arg31 + var63
    result = var49 & var60 | var51
    return result
class class13(object):
    def func12(self, arg37, arg38):
        result = ((-1771965045 & -1 ^ 1 - -1854738919 ^ arg37) - -1743833632) | arg37
        return result
class class11(class13):
    def func12(self, arg35, arg36):
        result = arg35 - arg35
        return result
def func10():
    func8()
    result = len(xrange(21))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -4
def func7():
    func5()
    result = len(range(29))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : -1
def func3(arg8, arg9):
    var10 = arg9 ^ ((arg8 & -957971908) ^ -831)
    var11 = (arg9 | var10) & -290678312 | 36505037
    if arg8 < arg8:
        var12 = 1227116599 | ((var10 | arg8) + 941624747)
    else:
        var12 = var10 + (arg8 + arg8 + -575)
    var13 = -489 - ((-947 - var11) + -1740178674)
    var14 = var13 | (var10 & 955407116) ^ -958
    var15 = (arg8 - -967 & var13) ^ 488
    var16 = ((var15 & -138) - var15) ^ arg9
    var17 = var16 - (var10 & var13) + arg9
    var18 = var17 | var16
    var19 = var16 ^ var15
    var20 = var17 ^ var19 ^ arg8 & var18
    var21 = (var16 ^ 745) - var17 & var10
    var22 = var20 - ((-68 | var15) ^ var14)
    var23 = var22 & (120 - var10) - var11
    var24 = arg8 ^ (var11 | arg9) - var20
    var25 = var16 & ((var18 + var21) & var23)
    var26 = ((var14 & var21) - 929) & -969
    var27 = (-244 | arg9) - var11
    var28 = arg8 - (var24 ^ var13 ^ var22)
    var29 = var22 + var21
    var30 = var18 | var18
    result = var27 | (var10 | var28)
    return result
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    result = ((-414 & (arg2 | (-272 & -997) - var7)) - (((var7 | arg1) - 482286050 & -463 - var7) ^ arg1)) | -1664503799
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in (-3 - 0 for i in xrange(33)):
        if arg3 < arg4:
            var5 += arg3 + 2
        else:
            var5 += arg4 - var6
    return var5
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 3'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 2'
    print 'func_number: 4'
    print 'arg_number: 31'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 15'
    print 'arg_number: 67'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,def func4(arg31, arg32):
    var33 = func7()
    var34 = func10()
    if arg32 < var34:
        var39 = class11()
    else:
        var39 = class13()
    for var40 in xrange(21):
        var41 = var39.func12
        var41(arg31, arg32)
    if arg31 < arg31:
        var42 = 1035852752 - arg32
    else:
        var42 = 640 + arg31 | var34 + -819416646
    var43 = (366 + var33) + -291 + 202
    var44 = var34 & arg32
    if arg31 < var43:
        var45 = (arg32 & 411 ^ var44) | -386
    else:
        var45 = -62 + (932 - var33 ^ var34)
    if var34 < arg31:
        var46 = (arg31 ^ arg32) ^ -483382619 | var33
    else:
        var46 = arg31 - (-801395852 ^ 208122410) - -315
    var47 = -776 + var44 & arg31 & var34
    var48 = arg31 ^ var47
    var49 = var34 + arg31 - var43 + var48
    var50 = (var47 - var48) ^ -794 | var43
    var51 = (arg31 | var47 & 135) - var50
    var52 = var33 & var47
    var53 = ((var47 ^ var43) | var49) ^ -2063711281
    var54 = var52 - var51 | arg31 ^ var51
    var55 = (var54 | var43) | var43
    if var34 < arg32:
        var56 = var48 ^ ((var50 & arg31) - var43)
    else:
        var56 = var53 - ((-446 + var33) & var33)
    var57 = arg31 - (var55 - var43)
    var58 = (var55 | 141239244) | var33 | var55
    var59 = var58 | var44 | var47 & var44
    var60 = var53 & var58
    var61 = ((var44 ^ -105945104) + var53) - var58
    var62 = var58 ^ (539 ^ var57) | var54
    var63 = var51 ^ var34 & var43
    var64 = var34 + (var50 & (var51 - var43))
    var65 = var63 | var61
    var66 = var57 & var48 | arg31 + var63
    result = var49 & var60 | var51
    return result
class class13(object):
    def func12(self, arg37, arg38):
        result = ((-1771965045 & -1 ^ 1 - -1854738919 ^ arg37) - -1743833632) | arg37
        return result
class class11(class13):
    def func12(self, arg35, arg36):
        result = arg35 - arg35
        return result
def func10():
    func8()
    result = len(xrange(21))
    func9()
    return result
def func9():
    global len
    del len
def func8():
    global len
    len = lambda x : -4
def func7():
    func5()
    result = len(range(29))
    func6()
    return result
def func6():
    global len
    del len
def func5():
    global len
    len = lambda x : -1
def func3(arg8, arg9):
    var10 = arg9 ^ ((arg8 & -957971908) ^ -831)
    var11 = (arg9 | var10) & -290678312 | 36505037
    if arg8 < arg8:
        var12 = 1227116599 | ((var10 | arg8) + 941624747)
    else:
        var12 = var10 + (arg8 + arg8 + -575)
    var13 = -489 - ((-947 - var11) + -1740178674)
    var14 = var13 | (var10 & 955407116) ^ -958
    var15 = (arg8 - -967 & var13) ^ 488
    var16 = ((var15 & -138) - var15) ^ arg9
    var17 = var16 - (var10 & var13) + arg9
    var18 = var17 | var16
    var19 = var16 ^ var15
    var20 = var17 ^ var19 ^ arg8 & var18
    var21 = (var16 ^ 745) - var17 & var10
    var22 = var20 - ((-68 | var15) ^ var14)
    var23 = var22 & (120 - var10) - var11
    var24 = arg8 ^ (var11 | arg9) - var20
    var25 = var16 & ((var18 + var21) & var23)
    var26 = ((var14 & var21) - 929) & -969
    var27 = (-244 | arg9) - var11
    var28 = arg8 - (var24 ^ var13 ^ var22)
    var29 = var22 + var21
    var30 = var18 | var18
    result = var27 | (var10 | var28)
    return result
def func1(arg1, arg2):
    var7 = func2(arg1, arg2)
    result = ((-414 & (arg2 | (-272 & -997) - var7)) - (((var7 | arg1) - 482286050 & -463 - var7) ^ arg1)) | -1664503799
    return result
def func2(arg3, arg4):
    var5 = 0
    for var6 in (-3 - 0 for i in xrange(33)):
        if arg3 < arg4:
            var5 += arg3 + 2
        else:
            var5 += arg4 - var6
    return var5
if __name__ == "__main__":
    print 'prog_size: 2'
    print 'func_number: 3'
    print 'arg_number: 8'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
    print 'prog_size: 2'
    print 'func_number: 4'
    print 'arg_number: 31'
    for i in xrange(25000):
        x = 5
        x = func3(x, i)
        print x,
    print 'prog_size: 5'
    print 'func_number: 15'
    print 'arg_number: 67'
    for i in xrange(25000):
        x = 5
        x = func4(x, i)
        print x,
